version: '3.7'

volumes:
  postgres_data:
    driver: local
  consul_data:
    driver: local

services:
  consul-security-service:
    image: consul:latest
    volumes:
      - consul_data:/consul/data
    build: .
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    restart: always
    container_name: consul-security-service
    command: "agent -server -ui -node=server-2 -bootstrap-expect=1 -client=0.0.0.0"

  spring-security-keycloak:
    image: quay.io/keycloak/keycloak:legacy
    container_name: spring-security-keycloak
    restart: always
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db-keycloak
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: spring
      KEYCLOAK_PASSWORD: spring123
      TZ: Europe/Berlin
    ports:
      - "8889:8080"
    depends_on:
      - db-keycloak

  db-keycloak:
    image: postgres
    container_name: db-keycloak
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      TZ: Europe/Berlin
      PGTZ: Europe/Berlin
    ports:
      - "5432:5432"
  demo-api:
    image: kirillesau/spring-security-demo/demo-api:latest
    environment:
      - SPRING_CLOUD_CONSUL_HOST=consul-security-service
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - consul-security-service
  gateway:
    image: kirillesau/spring-security-demo/gateway:latest
    container_name: spring-security-gateway
    ports:
      - "8888:8080"
    environment:
      - SPRING_CLOUD_CONSUL_HOST=consul-security-service
    depends_on:
      - consul-security-service
